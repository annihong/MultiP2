% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R
\name{update_prior}
\alias{update_prior}
\title{Update prior parameters in the model}
\usage{
update_prior(
  model_obj,
  param,
  type,
  layer_lab = NULL,
  covar_lab = NULL,
  mean = NULL,
  sd = NULL,
  eta = NULL,
  alpha = NULL,
  beta = NULL,
  ...
)
}
\arguments{
\item{model_obj}{An object of the class Mp2Model where the prior parameters will be updated.}

\item{param}{A character string indicating the parameter to be updated. It can be one of "density", "reciprocity", "cross_density", "cross_reciprocity", "sender", "receiver", "LKJ".}

\item{type}{A character string indicating the type of the parameter. It can be one of "baseline", "random", "covariate".}

\item{layer_lab}{A character string indicating the layer name or pair name. If NULL, all layers will be updated.}

\item{covar_lab}{A character string indicating the covariate name if type = "covariate".}

\item{mean}{The new mean value for the prior parameter. If NULL, the mean value will not be updated.}

\item{sd}{The new standard deviation for the prior parameter. If NULL, the standard deviation will not be updated.}

\item{eta}{The new eta value for the prior parameter LJK_eta. If NULL, the eta value will not be updated.}

\item{alpha}{The new alpha value for the prior parameter scale_alpha. If NULL, the alpha value will not be updated.}

\item{beta}{The new beta value for the prior parameter scale_beta. If NULL, the beta value will not be updated.}

\item{...}{Additional arguments.}
}
\value{
The updated model object.
}
\description{
This function updates the prior parameters in a given Mp2Model object. It allows for updating parameters related to density, reciprocity, cross-density, cross-reciprocity, sender, receiver, and LKJ. The parameters can be of type baseline, random, or covariate.
}
\examples{
#not run
#model_obj <- update_prior(model_obj, "density", "baseline", layer_lab="network1", mean=0.5, sd=0.1)
#model_obj <- update_prior(model_obj, "cross_density", "baseline", layer_lab=c("network1", "network2"), mean=0.5, sd=0.1)
#model_obj <- update_prior(model_obj, "sender", "covariate", layer_lab="network1", covar_lab="actor_covar1", mean=0.5, sd=0.1)
#model_obj <- update_prior(model_obj, "LKJ", "random", eta=2, alpha=50, beta=2)
}
